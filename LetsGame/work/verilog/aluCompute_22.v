/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module aluCompute_22 (
    input [5:0] mode,
    input [7:0] a,
    input [7:0] b,
    output reg [7:0] out,
    output reg z,
    output reg v,
    output reg n
  );
  
  
  
  reg [8:0] rawadd;
  
  reg [7:0] afteradd;
  
  reg xb7;
  
  reg zz;
  
  reg vv;
  
  reg nn;
  
  always @* begin
    out = 8'h00;
    zz = 1'h0;
    vv = 1'h0;
    nn = 1'h0;
    z = 1'h0;
    v = 1'h0;
    n = 1'h0;
    xb7 = b[7+0-:1];
    if (mode[0+0-:1] == 1'h0) begin
      rawadd = a + b;
    end else begin
      rawadd = a + ~b + 1'h1;
      xb7 = ~b[7+0-:1];
    end
    afteradd = rawadd[0+7-:8];
    if (afteradd == 1'h0) begin
      zz = 1'h1;
    end
    vv = (a[7+0-:1] & xb7 & ~afteradd[7+0-:1]) | (~a[7+0-:1] & ~xb7 & afteradd[7+0-:1]);
    nn = afteradd[7+0-:1];
    z = zz;
    v = vv;
    n = nn;
    
    case (mode)
      6'h00: begin
        out = afteradd;
      end
      6'h01: begin
        out = afteradd;
      end
      6'h02: begin
        out = a * b;
      end
      6'h18: begin
        out = a & b;
      end
      6'h1e: begin
        out = a | b;
      end
      6'h16: begin
        out = a ^ b;
      end
      6'h1a: begin
        out = a;
      end
      6'h20: begin
        out = a << b;
      end
      6'h21: begin
        out = a >> b;
      end
      6'h23: begin
        out = $signed(a) >>> b;
      end
      6'h33: begin
        out = (zz & mode[1+0-:1]) | ((nn ^ vv) & mode[2+0-:1]);
      end
      6'h35: begin
        out = (zz & mode[1+0-:1]) | ((nn ^ vv) & mode[2+0-:1]);
      end
      6'h37: begin
        out = (zz & mode[1+0-:1]) | ((nn ^ vv) & mode[2+0-:1]);
      end
    endcase
    if (mode == 6'h24) begin
      out = (a << b | (a >> (4'h8 - b)));
    end
    if (mode == 6'h25) begin
      out = (a >> b | (a << (4'h8 - b)));
    end
  end
endmodule
